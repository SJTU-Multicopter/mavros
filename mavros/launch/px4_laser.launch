<launch>
	<!-- vim: set ft=xml noet : -->
	<!-- example launch script for PX4 based FCU's -->

	<arg name="fcu_url" default="/dev/Pixhawk:921600" />
	<arg name="gcs_url" default="" />
	<arg name="tgt_system" default="1" />
	<arg name="tgt_component" default="1" />
	<arg name="log_output" default="screen" />

	<include file="$(find mavros)/launch/node.launch">
		<arg name="pluginlists_yaml" value="$(find mavros)/launch/px4_pluginlists.yaml" />
		<arg name="config_yaml" value="$(find mavros)/launch/px4_config.yaml" />

		<arg name="fcu_url" value="$(arg fcu_url)" />
		<arg name="gcs_url" value="$(arg gcs_url)" />
		<arg name="tgt_system" value="$(arg tgt_system)" />
		<arg name="tgt_component" value="$(arg tgt_component)" />
		<arg name="log_output" value="$(arg log_output)" />
	</include>
	
	<node pkg="lidar_driver" name="tf01_node" type="tf01_node" output="screen">
		<param name="device" type="string" value="/dev/Lidar"/>
	</node> 
	
	<node pkg="urg_node" name="urg" type="urg_node">
    		<param name="calibrate_time" type="bool" value="false"/>
    		<param name="ip_address" value="192.168.0.10"/>
    		<param name="intensity" type="bool" value="false"/>
    		<param name="min_ang" type="double" value="-1.5708" />
    		<param name="max_ang" type="double" value="1.5708" />
  	</node> 


  #### publish an example base_link -> laser transform ###########

	<node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" 
		args="0.0 0.0 0.0 0.0 0.0 0.0 /base_link /laser 40" />


  #### start the scan projector ##############################
	
	<node pkg="laserscan" name="scan_projector" type="scan_projector" >
    		<remap from="imu/data" to="mavros/imu/data"/>
  	</node>


  #### start the laser scan_matcher ##############################

  	<node pkg="laser_scan_matcher" type="laser_scan_matcher_node" name="laser_scan_matcher_node" output="screen">
		<param name="fixed_frame" value = "odom"/>
    		<param name="max_iterations" value="10"/>
    		<param name="use_imu" value="true"/>
    		<remap from="imu/data" to="mavros/imu/data"/>
    		<remap from="scan" to="scan_projected"/>
	</node>
  
	<node pkg="laserscan" type="odom_transform" name="odom_transform" output="screen"/>

</launch>
